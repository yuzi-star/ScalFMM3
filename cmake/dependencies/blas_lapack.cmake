#
# Blas options
# ------------
if(${CMAKE_PROJECT_NAME}_USE_MKL)
    set(BLA_VENDOR "Intel10_64lp_seq")
    if(DEFINED ENV{MKLROOT})
        set(MKL_ROOT $ENV{MKLROOT})
        find_file(MKL_CONFIG MKLConfig.cmake ${MKL_ROOT}/lib/cmake/mkl)
        if(MKL_CONFIG)
            message(STATUS "MKL_CONFIG found.")
            set(MKL_INTERFACE lp64)
            set(MKL_LINK dynamic)
            set(MKL_THREADING sequential)
            find_package(MKL CONFIG REQUIRED)
            list(APPEND FUSE_LIST CBLAS)
            set(CBLAS_FOUND TRUE)
            set_target_properties(MKL::MKL PROPERTIES
                    INTERFACE_INCLUDE_DIRECTORIES
                    "${MKL_ROOT}/include;${MKL_ROOT}/include/fftw"
            )
            list(APPEND CBLAS_TARGET MKL::MKL)
        else()
            message(STATUS "MKL_CONFIG not found! Fallback to cmake.")
            find_package(BLAS REQUIRED)
            if(DEFINED BLAS_FOUND)
                set_target_properties(BLAS::BLAS PROPERTIES
                    INTERFACE_INCLUDE_DIRECTORIES
                    "${MKL_ROOT}/include;${MKL_ROOT}/include/fftw"
                    )
                list(APPEND CBLAS_TARGET BLAS::BLAS)
                list(APPEND FUSE_LIST CBLAS)
                set(CBLAS_FOUND TRUE)
            elseif()
                message(FATAL_ERROR "CBLAS and BLAS required for uniform interpolator.")
            endif()
        endif()
    else()
        message(FATAL_ERROR "MKLROOT not set!")
    endif()
else()
    cmake_print_variables(BLA_VENDOR)
    if(NOT BLA_VENDOR)
        message(WARNING "You are not using Intel MKL, please provide a blas vendor through the BLA_VENDOR variable !")
    endif()
    find_package(BLAS REQUIRED)
    if(DEFINED BLAS_FOUND)
        list(APPEND CBLAS_TARGET BLAS::BLAS)
        list(APPEND FUSE_LIST CBLAS)
        set(CBLAS_FOUND TRUE)
        find_package(LAPACK REQUIRED)
        if(DEFINED LAPACK_FOUND)
            list(APPEND CBLAS_TARGET LAPACK::LAPACK)
    elseif()
        message(FATAL_ERROR "LAPACK required for uniform/Chebyshev m2l handler.")
    endif()
    elseif()
        message(FATAL_ERROR "CBLAS and BLAS required for uniform/Chebyshev interpolator.")
    endif()
endif()

